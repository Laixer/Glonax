#!/bin/bash
# Copyright (c) 2021-2023 Laixer B.V.
#
# Debian package post-installation script.

set -e

SERVER_HOME=/var/lib/glonax
SERVER_USER=glonax
SERVER_NAME="Glonax daemon"
SERVER_GROUP=glonax
TTY_GROUP=tty
DIALOUT_GROUP=dialout
CONF_FILE="/etc/glonax.conf"

# Create group if not existing
if ! getent group | grep -q "^$SERVER_GROUP:" ; then
   echo -n "Adding group $SERVER_GROUP.."
   addgroup --quiet --system $SERVER_GROUP 2>/dev/null ||true
   echo "..done"
fi

# Create homedir if not existing
test -d $SERVER_HOME || mkdir $SERVER_HOME

if ! getent passwd | grep -q "^$SERVER_USER:"; then
  echo -n "Adding system user $SERVER_USER.."
  adduser --quiet \
          --system \
          --ingroup $SERVER_GROUP \
          --no-create-home \
          --disabled-password \
          $SERVER_USER 2>/dev/null || true
  usermod -c "$SERVER_NAME" \
        -d $SERVER_HOME   \
        -g $SERVER_GROUP \
        $SERVER_USER
  echo "..done"
fi

# Add user to tty group
if getent group | grep -q "^$TTY_GROUP:" ; then
  echo -n "Adding user $SERVER_USER to group $TTY_GROUP.."
  usermod -a -G $TTY_GROUP $SERVER_USER
  echo "..done"
fi

# Add user to dialout group
if getent group | grep -q "^$DIALOUT_GROUP:" ; then
  echo -n "Adding user $SERVER_USER to group $DIALOUT_GROUP.."
  usermod -a -G $DIALOUT_GROUP $SERVER_USER
  echo "..done"
fi

# Adjust file and directory permissions
if ! dpkg-statoverride --list $SERVER_HOME >/dev/null; then
  chown -R $SERVER_USER:adm $SERVER_HOME
  chmod u=rwx,g=rxs,o= $SERVER_HOME
fi

# Create signal fifo if not existing
SIGNAL_FIFO="/var/lib/glonax/signal"
if [ ! -p "$SIGNAL_FIFO" ]; then
  echo -n "Creating signal fifo $SIGNAL_FIFO.."
  mkfifo "$SIGNAL_FIFO"
  chown $SERVER_USER:adm "$SIGNAL_FIFO"
  chmod u=rwx,g=rxs,o= "$SIGNAL_FIFO"
  echo "..done"
fi

# Load the udev rules
if command -v udevadm &> /dev/null; then
  echo -n "Reloading udev rules.."
  udevadm control --reload-rules
  echo "..done"
fi

enable_glonax_service() {
  local SERVICE_NAME="$1"

  if systemctl is-active "$SERVICE_NAME" &> /dev/null; then
    echo -n "Restarting $SERVICE_NAME.."
    systemctl restart "$SERVICE_NAME"
    echo "..done"
  fi
  echo -n "Enabling $SERVICE_NAME.."
  systemctl enable "$SERVICE_NAME"
  echo "..done"
}

# Start the glonax services
if [ -d /run/systemd/system ]; then
  # Reload the systemd daemon to pick up the new service files
  echo -n "Reloading systemd units.."
  systemctl daemon-reload
  echo "..done"

  enable_glonax_service glonax-proxy.service
  enable_glonax_service glonax-agent.service
  enable_glonax_service glonax-ecu.service
fi
