#!/bin/bash

set -e

SERVER_HOME=/var/lib/glonax
SERVER_USER=glonax
SERVER_NAME="Glonax daemon"
SERVER_GROUP=glonax

# Create group if not existing
if ! getent group | grep -q "^$SERVER_GROUP:" ; then
   echo -n "Adding group $SERVER_GROUP.."
   addgroup --quiet --system $SERVER_GROUP 2>/dev/null ||true
   echo "..done"
fi

# Create homedir if not existing
test -d $SERVER_HOME || mkdir $SERVER_HOME

if ! getent passwd | grep -q "^$SERVER_USER:"; then
  echo -n "Adding system user $SERVER_USER.."
  adduser --quiet \
          --system \
          --ingroup $SERVER_GROUP \
          --no-create-home \
          --disabled-password \
          $SERVER_USER 2>/dev/null || true
  echo "..done"
fi

# Adjust passwd entry
usermod -c "$SERVER_NAME" \
        -d $SERVER_HOME   \
        -g $SERVER_GROUP  \
           $SERVER_USER

# Adjust file and directory permissions
if ! dpkg-statoverride --list $SERVER_HOME >/dev/null; then
  chown -R $SERVER_USER:adm $SERVER_HOME
  chmod u=rwx,g=rxs,o= $SERVER_HOME
fi

# Reload the systemd daemon to pick up the new service files
if command -v systemctl &> /dev/null; then
  echo "Reloading systemd units"
  systemctl daemon-reload
fi

# Load the udev rules
if command -v udevadm &> /dev/null; then
  echo "Reloading udev rules"
  udevadm control --reload-rules
fi

# Restart the glonax services
if command -v systemctl &> /dev/null; then
  echo "Restarting glonax services"
  if systemctl is-active glonax-proxy.service &> /dev/null; then
    systemctl restart glonax-proxy.service
  fi
  if systemctl is-active glonax-agent.service &> /dev/null; then
    systemctl restart glonax-agent.service
  fi
fi
