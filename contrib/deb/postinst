#!/bin/bash
# Copyright (c) 2021-2024 Laixer B.V.
#
# Debian package post-installation script.

set -e

USERNAME_DAEMON="glonaxd"
USERNAME_INPUT="glonax-input"
GROUPNAME="glonax"

create_group() {
  local group_name="$1"
  if getent group "$group_name" &>/dev/null; then
    echo "Group $group_name already exists. Skipping group creation."
  else
    groupadd "$group_name" --system
    if [ $? -eq 0 ]; then
      echo "Group $group_name has been successfully created."
    else
      echo "Failed to create group $group_name. Please check system logs for more information."
      return 1
    fi
  fi
  return 0
}

create_user() {
  local user_name="$1"
  local group_name="$2"
  if id "$user_name" &>/dev/null; then
    echo "User $user_name already exists. Skipping user creation."
  else
    useradd --system --no-create-home --shell /usr/sbin/nologin --gid "$group_name" "$user_name"
    if [ $? -eq 0 ]; then
      echo "User $user_name has been successfully created and added to group $group_name."
    else
      echo "Failed to create user $user_name. Please check system logs for more information."
      return 1
    fi
  fi
  return 0
}

# Add the glonax group
create_group "$GROUPNAME" || exit 1
create_user "$USERNAME_DAEMON" "$GROUPNAME" || exit 1
create_user "$USERNAME_INPUT" "$GROUPNAME" || exit 1

# Reload the udev rules
if command -v udevadm &> /dev/null; then
  echo -n "Reloading udev rules.."
  udevadm control --reload-rules
  echo "..done"
fi

# Restart the glonax service
systemd_start_service() {
  local SERVICE_NAME="$1"

  if systemctl is-active "$SERVICE_NAME" &> /dev/null; then
    echo -n "Restarting $SERVICE_NAME.."
    systemctl restart "$SERVICE_NAME"
    echo "..done"
  fi
}

# Enable the glonax services if systemd is available
if [ -d /run/systemd/system ]; then
  # Reload the systemd daemon to pick up the new service files
  echo -n "Reloading systemd units.."
  systemctl daemon-reload
  echo "..done"

  # systemd_start_service glonax.service
fi

exit 0