// Copyright (C) 2023 Laixer Equipment B.V.
// All rights reserved.
//
// This software may be modified and distributed under the terms
// of the included license.  See the LICENSE file for details.

syntax = "proto3";

package glonax;

// The vehicle management service.
service VehicleManagement {
  // Sends a motion command
  rpc MotionCommand (Motion) returns (Empty) {}
  // Listen for signal updates.
  rpc ListenSignal (Empty) returns (stream Signal) {}
}

// The empty response message
message Empty {}

// Motion instruction.
//
// Whether or not the instruction has positive effect
// depends on the motion device itself. The motion device
// may support more or less functionality to control motion.
//
// The motion value can communicate the full range of an i16.
// The signness of the value is often used as a forward/backward
// motion indicator. However this is left to the motion device.
message Motion {
  enum MotionType {
    // Never use the zero index.
    NONE = 0;
    // Stop all motion until resumed.
    STOP_ALL = 1;
    // Resume all motion.
    RESUME_ALL = 2;
    // Change motion on actuators.
    CHANGE = 3;
  }

  MotionType type = 1;

  message ChangeSet {
    uint32 actuator = 1;
    sint32 value = 2;
  }

  repeated ChangeSet changes = 2;
}

message Signal {
  uint32 address = 1;
  uint32 function = 2;

  message vector3 {
    float x = 1;
    float y = 2;
    float z = 3;
  }

  oneof metric {
    // Temperature in celcius.
    float temperature = 10;
    // Angle in radians.
    float angle = 11;
    // Speed in meters per second.
    float speed = 12;
    // Revolutions per minute.
    int32 rpm = 13;
    // Acceleration in mg.
    vector3 acceleration = 14;
    // Percentage.
    int32 percent = 15;
  }
}
